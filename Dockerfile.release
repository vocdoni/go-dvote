# syntax=docker/dockerfile:experimental

FROM golang:1.16.2 AS builder

# Build all the binaries at once, so that the final targets don't require having
# Go installed to build each of them.
WORKDIR /src
COPY . .

RUN --mount=type=cache,sharing=locked,id=gomod,target=/go/pkg/mod/cache \
	--mount=type=cache,sharing=locked,id=goroot,target=/root/.cache/go-build \
	CGO_ENABLED=1 go build -tags=badgerdb -o=. -ldflags="-w -s -X=go.vocdoni.io/dvote/internal.Version=$(git describe --always --tags --dirty --match='v[0-9]*')" -mod=readonly \
	./cmd/dvotenode ./cmd/vochaintest

FROM debian:10.8-slim AS test
WORKDIR /app

COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt

RUN apt update && apt install -y curl
COPY --from=builder /src/vochaintest ./

FROM debian:10.8-slim
WORKDIR /app

COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt
COPY --from=builder /src/dvotenode ./

ENTRYPOINT ["/app/dvotenode"]
